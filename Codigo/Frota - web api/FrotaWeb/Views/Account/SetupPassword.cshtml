@model FrotaWeb.Models.SetupPasswordViewModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Definir Senha - FrotaWeb</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link rel="stylesheet" href="~/css/design-system.css" asp-append-version="true" />
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: var(--spacing-md);
        }

        .setup-container {
            width: 100%;
            max-width: 1200px;
            background: var(--bg-primary);
            border-radius: var(--radius-xl);
            box-shadow: var(--shadow-xl);
            overflow: hidden;
            display: grid;
            grid-template-columns: 1fr 1fr;
            min-height: 700px;
        }

        .setup-visual {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: var(--spacing-2xl);
            color: var(--text-inverse);
            position: relative;
            overflow: hidden;
        }

        .setup-visual::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            animation: float 20s ease-in-out infinite;
        }

        .visual-content {
            position: relative;
            z-index: 1;
            text-align: center;
        }

        .visual-icon {
            width: 120px;
            height: 120px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: var(--spacing-xl);
            backdrop-filter: blur(10px);
        }

        .visual-icon i {
            font-size: 3rem;
            color: var(--text-inverse);
        }

        .visual-title {
            font-size: var(--font-size-3xl);
            font-weight: 700;
            margin-bottom: var(--spacing-md);
            line-height: 1.2;
        }

        .visual-subtitle {
            font-size: var(--font-size-lg);
            opacity: 0.9;
            line-height: 1.6;
        }

        .setup-form {
            padding: var(--spacing-2xl);
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .form-header {
            text-align: center;
            margin-bottom: var(--spacing-xl);
        }

        .form-logo {
            width: 60px;
            height: 60px;
            margin: 0 auto var(--spacing-md);
        }

        .form-title {
            font-size: var(--font-size-2xl);
            font-weight: 700;
            color: var(--text-primary);
            margin-bottom: var(--spacing-sm);
        }

        .form-subtitle {
            color: var(--text-secondary);
            font-size: var(--font-size-base);
        }

        .password-hints {
            list-style: none;
            margin: var(--spacing-sm) 0 var(--spacing-lg) 0;
            padding: 0;
        }

        .password-hints li {
            display: flex;
            align-items: center;
            gap: var(--spacing-sm);
            font-size: var(--font-size-sm);
            margin-bottom: var(--spacing-xs);
            transition: color var(--transition-fast);
        }

        .password-hints li.valid {
            color: var(--success-color);
        }

        .password-hints li.invalid {
            color: var(--error-color);
        }

        .setup-button {
            width: 100%;
            padding: 0.875rem;
            background: var(--primary-color);
            color: var(--text-inverse);
            border: none;
            border-radius: var(--radius-lg);
            font-size: var(--font-size-base);
            font-weight: 600;
            cursor: pointer;
            transition: all var(--transition-fast);
            margin-bottom: var(--spacing-lg);
        }

        .setup-button:hover {
            background: var(--primary-dark);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(12, 105, 171, 0.4);
        }

        .setup-button:active {
            transform: translateY(0);
        }

        .error-messages {
            background: rgba(239, 68, 68, 0.1);
            border: 1px solid rgba(239, 68, 68, 0.2);
            border-radius: var(--radius-lg);
            padding: var(--spacing-md);
            margin-bottom: var(--spacing-lg);
        }

        .error-messages ul {
            list-style: none;
            margin: 0;
            padding: 0;
        }

        .error-messages li {
            color: var(--error-color);
            font-size: var(--font-size-sm);
            margin-bottom: var(--spacing-xs);
        }

        .error-messages li:last-child {
            margin-bottom: 0;
        }

        @@media (max-width: 768px) {
            .setup-container {
                grid-template-columns: 1fr;
                max-width: 500px;
            }

            .setup-visual {
                display: none;
            }

            .setup-form {
                padding: var(--spacing-xl);
            }
        }

        @@media (max-width: 480px) {
            body {
                padding: var(--spacing-sm);
            }

            .setup-form {
                padding: var(--spacing-lg);
            }
        }
    </style>
</head>
<body>
    <div class="setup-container">
        <div class="setup-visual">
            <div class="visual-content">
                <div class="visual-icon">
                    <i class="fas fa-key"></i>
                </div>
                <h1 class="visual-title">Definir Senha</h1>
                <p class="visual-subtitle">Complete seu cadastro definindo uma senha segura</p>
            </div>
        </div>

        <div class="setup-form">
            <div class="form-header">
                <img src="~/img/logo/logo.png" alt="Logo" class="form-logo">
                <h2 class="form-title">Olá!</h2>
                <p class="form-subtitle">Vamos concluir seu cadastro.</p>
            </div>

            <form asp-action="SetupPassword" method="post">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="error-messages">
                        <div asp-validation-summary="ModelOnly"></div>
                    </div>
                }

                <input type="hidden" asp-for="UserId" />

                <div class="form-group">
                    <label class="form-label">Defina sua senha</label>
                    <div class="input-group">
                        <input asp-for="Password" class="form-input" id="Password" type="password" oninput="validatePassword(this.value)" placeholder="Digite sua senha" />
                        <i class="fas fa-eye input-icon" onclick="togglePasswordVisibility('Password', 'password-eye')"></i>
                    </div>
                    <span asp-validation-for="Password" class="error-message"></span>
                    
                    <ul id="password-hints" class="password-hints">
                        <li id="length" class="invalid">
                            <i class="fas fa-times"></i> Mínimo 8 caracteres
                        </li>
                        <li id="uppercase" class="invalid">
                            <i class="fas fa-times"></i> Pelo menos uma letra maiúscula
                        </li>
                        <li id="lowercase" class="invalid">
                            <i class="fas fa-times"></i> Pelo menos uma letra minúscula
                        </li>
                        <li id="number" class="invalid">
                            <i class="fas fa-times"></i> Pelo menos um número
                        </li>
                        <li id="special" class="invalid">
                            <i class="fas fa-times"></i> Pelo menos um caractere especial
                        </li>
                    </ul>
                </div>

                <div class="form-group">
                    <label class="form-label">Confirme sua senha</label>
                    <div class="input-group">
                        <input asp-for="ConfirmPassword" class="form-input" id="ConfirmPassword" type="password" placeholder="Confirme sua senha" />
                        <i class="fas fa-eye input-icon" onclick="togglePasswordVisibility('ConfirmPassword', 'confirm-password-eye')"></i>
                    </div>
                    <span asp-validation-for="ConfirmPassword" class="error-message"></span>
                </div>

                <button id="login-submit" type="submit" class="setup-button">
                    Definir Senha
                </button>
            </form>
        </div>
    </div>

    <script>
        function validatePassword(password) {
            const hints = {
                length: password.length >= 8,
                uppercase: /[A-Z]/.test(password),
                lowercase: /[a-z]/.test(password),
                number: /\d/.test(password),
                special: /[\W_]/.test(password),
            };

            // Atualizar os ícones e classes do checklist
            for (const [key, isValid] of Object.entries(hints)) {
                const hint = document.getElementById(key);
                const icon = hint.querySelector("i");

                if (isValid) {
                    hint.classList.remove("invalid");
                    hint.classList.add("valid");
                    icon.classList.remove("fa-times");
                    icon.classList.add("fa-check");
                } else {
                    hint.classList.remove("valid");
                    hint.classList.add("invalid");
                    icon.classList.remove("fa-check");
                    icon.classList.add("fa-times");
                }
            }
        }

        function togglePasswordVisibility(inputId, iconId) {
            const input = document.getElementById(inputId);
            const icon = input.nextElementSibling.querySelector("i");

            if (input.type === "password") {
                input.type = "text";
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash");
            } else {
                input.type = "password";
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye");
            }
        }

        // Form Animation
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('.setup-form');
            form.style.opacity = '0';
            form.style.transform = 'translateY(20px)';
            
            setTimeout(() => {
                form.style.transition = 'all 0.6s ease';
                form.style.opacity = '1';
                form.style.transform = 'translateY(0)';
            }, 100);
        });
    </script>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
</body>
</html>
